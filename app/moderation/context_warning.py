"""Helpers for issuing context warnings on Reddit items."""

from app.persistence.context_warnings import add_context_warning

CONTEXT_WARNING_MESSAGE = (
    "‚ö†Ô∏è Hey there! Thanks for your contribution! üôå\n"
    "üìù To help everyone understand and discuss your posts, please add more context‚Äîlike your experiences üéí, background üó∫Ô∏è, or relevant examples üìö‚Äîin future submissions.\n"
    "üö´ Posts without enough context may be removed.\n"
    "üôè Thanks for your cooperation! üòä"
)


def issue_context_warning(item, auto_removed: bool = False) -> int:
    """Reply to the item with the context warning and record it.

    Returns the new warning count for the author.
    """
    message = CONTEXT_WARNING_MESSAGE
    if auto_removed:
        message += "\n\nThis post was removed automatically after multiple warnings."
    try:
        item.reply(message)
    except Exception as e:
        print(f"‚ö†Ô∏è Failed to reply with context warning: {e}")
    author_name = str(item.author)
    return add_context_warning(author_name)